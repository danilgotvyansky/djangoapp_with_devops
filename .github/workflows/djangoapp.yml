name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_HOST: 192.168.6.2
  DB_PORT: ${{ secrets.DB_PORT }}
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  DEBUG: TRUE

jobs:
  build:

    runs-on: self-hosted
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up MariaDB
      run: |
        sudo apt-get -y update
        sudo apt-get -y install build-essential
        sudo apt-get -y install mariadb-server
        sudo apt-get -y install libmysqlclient-dev
    - name: Check if database and user exist
      run: |
        sudo mysql -e "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='$DB_NAME'" | grep $DB_NAME
        if [ $? -eq 0 ]
        then
          echo "Database already exists, skipping creation"
          export DB_EXISTS=true
        else
          echo "Database does not exist, creating"
          sudo mysql -e "CREATE DATABASE $DB_NAME;"
          export DB_EXISTS=false
        fi
        sudo mysql -e "SELECT User FROM mysql.user WHERE User='$DB_USER'" | grep $DB_USER
        if [ $? -eq 0 ]
        then
          echo "User already exists, skipping creation"
          export USER_EXISTS=true
        else
          echo "User does not exist, creating"
          sudo mysql -e "CREATE USER $DB_USER@localhost IDENTIFIED BY '$DB_PASSWORD';"
          sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO $DB_USER@localhost;"
          sudo mysql -e "FLUSH PRIVILEGES;"
          export USER_EXISTS=false
        fi
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    - name: Install Dependencies
      run: |
        cd vagrant/djangoapp
        python -m pip install --upgrade pip       
        pip install --use-pep517 -r requirements.txt
    - name: Run Tests
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: 192.168.6.2
        DB_PORT: ${{ secrets.DB_PORT }}
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DEBUG: TRUE
      run: |
        cd vagrant/djangoapp
        python manage.py test
    - name: Build and Push Docker Image
      run: |
        sudo docker build -t images_and_containers/djangoapp:djangoapp vagrant/djangoapp
        echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin docker.io
        sudo docker tag images_and_containers/djangoapp:djangoapp images_and_containers/djangoapp:djangoapp
        sudo docker push docker.io/images_and_containers/djangoapp:latest

